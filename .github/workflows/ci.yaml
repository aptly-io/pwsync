name: CI

on: [pull_request, workflow_dispatch]

jobs:
  tests:
    environment: CI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt-get install -y --upgrade git build-essential python${{ matrix.python-version }}-venv python${{ matrix.python-version }}-dev curl
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
          [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
          nvm install 18.6.0
          npm --version
          npm i @bitwarden/cli
          PATH=$PATH:$GITHUB_WORKSPACE/node_modules/.bin
          bw --version
          python --version
          python -m pip install --upgrade pip setuptools
          python -m venv .venv_dev
          . .venv_dev/bin/activate
          python -m pip install .[dev]
          python -m pip install .
          deactivate
          mkdir bw-data

      - name: Linting with pylama (does a forced succeed!)
        run: |
          . .venv_dev/bin/activate
          python -m pylama pwsync tests ||:
          deactivate

      - name: Linting pwith ylint
        run: |
          . .venv_dev/bin/activate
          python -m pylint pwsync tests
          deactivate

      - name: Run unit tests
        env:
          TEST_BW_CLIENT_ID: ${{ secrets.TEST_BW_CLIENT_ID }}
          TEST_BW_CLIENT_SECRET: ${{ secrets.TEST_BW_CLIENT_SECRET }}
          TEST_BW_MASTER_PASSWORD:  ${{ secrets.TEST_BW_MASTER_PASSWORD }}
          BITWARDENCLI_APPDATA_DIR: "/home/runner/work/pwsync/pwsync/bw-data"
        run: |
          . .venv_dev/bin/activate
          PATH=$PATH:$GITHUB_WORKSPACE/node_modules/.bin
          python -m pytest -s -vvv --durations=0 --cov=pwsync --cov-report=term tests
          deactivate

      - name: Build package
        run: |
          python -m venv .venv_build
          . .venv_build/bin/activate
          python -m pip install --upgrade pip setuptools
          python -m pip install .[build]
          python -m pip install .
          python -m build
          WHL_PKG_NAME=`ls -t -1 dist/ | head -1`
          twine check --strict dist/$WHL_PKG_NAME
          deactivate

      - uses: actions/upload-artifact@v2
        with:
          name: Source distribution package
          path: dist/pwsync-*.tar.gz
          if-no-files-found: error

      - uses: actions/upload-artifact@v2
        with:
          name: Install distribution package
          path: dist/pwsync-*.whl
          if-no-files-found: error

      - name: Run a simple integration test
        env:
          PWS_FROM_MASTER_PASSWORD: pw
          PWS_TO_MASTER_PASSWORD: pw
        run: |
          python -m venv .venv_install
          . .venv_install/bin/activate
          WHL_PKG_NAME=`ls -t -1 dist | head -1`
          python -m pip install dist/$WHL_PKG_NAME
          PATH=$PATH:$GITHUB_WORKSPACE/node_modules/.bin
          which pwsync
          pwsync -h
          pwsync -v
          pwsync -d -f demo/from.kdbx -t demo/to.kdbx
          # TODO real run fails on the delete waiting for user input
          #pwsync -f demo/from.kdbx -t demo/to.kdbx
